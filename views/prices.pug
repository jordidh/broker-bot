extends layout

block variables
    - var msgAlert = m_alert
    - var msgSuccess = m_success
    - var msgInfo = m_info
    - var msgWarning = m_warning

block extraScripts
  script(src='https://code.highcharts.com/stock/highstock.js')
  script(src='https://code.highcharts.com/stock/modules/data.js')
  script(src='https://code.highcharts.com/stock/modules/exporting.js')
  script(src="https://code.highcharts.com/stock/indicators/indicators.js")
  script(src="https://code.highcharts.com/stock/indicators/ema.js")
  script(src="https://code.highcharts.com/stock/indicators/dema.js")

block extraStyles
  link(rel='stylesheet' href='stylesheets/analysis.css')

block content
  h1 #{name} V #{version}

  p Page to get prices from exchanges

  p Get prices from exchange (kraken returns the last 720 data points)
    .container
      fieldset
        form(action='prices', method='get')
          | ðŸ§ª Test with prices &nbsp;
          select(name= 'exchange')
            if exchanges
              each exchange, i in exchanges
                option(value=exchange.url) #{exchange.name}
          select(name= 'pair')
            if pairs
              each pair, i in pairs
                option(value=pair) #{pair}
          select(name= 'interval')
            if intervals
              each interval, i in intervals
                option(value=interval) #{interval}
          input.ghost-button(name='btn', type='submit', value='GetPrices')
          p.small * Recupera dades OHLC i les mostra per pantalla

  if data.series != ""
    p Save prices to test file
      .container
        fieldset
          form(action='prices', method='post')
            | Data range to save: &nbsp;
            input.ghost-input(type='hidden', name='series', value=data.series)
            input#startDate(type='date' name='startDate' value=data.startDate min=data.startDate max=data.endDate)
            input#startTime(type='time' name='startTime' value=data.startTime min='00:00' max='24:00')
            input#endDate(type='date' name='endDate' value=data.endDate min=data.startDate max=data.endDate)
            input#endTime(type='time' name='endTime' value=data.endTime min='00:00' max='24:00')
            | &nbsp; file name: &nbsp;
            input#filename(type="text" name="filename" minlength="8" maxlength="50" required='' placeholder='length: min 8, max 50')
            input.ghost-button(name='btn', type='submit', value='SavePrices')
            p.small * Les dades es guardaran en un fitxer amb el segÃ¼ent format: [ [&#60;time en ms&#62;, &#60;open&#62;, &#60;high&#62;, &#60;low&#62;, &#60;close&#62;], ... ]

    figure.highcharts-figure
    #container(style='height: 620px; min-width: 310px')
    p.highcharts-description

    script(type='text/javascript').
      // create the chart
      Highcharts.stockChart('container', {

        rangeSelector: {
          selected: 2
        },

        title: {
          text: "#{data.title}"
        },

        subtitle: {
            text: '#{data.subtitle}'
        },

        legend: {
          enabled: true
        },

        plotOptions: {
          series: {
              showInLegend: true
          },
          candlestick: {
              // shared options for all candlestick series
          }
        },

        series: [{
          type: 'candlestick',
          id: 'aapl',
          name: '#{data.yAxisTitle}',
          data: !{data.series},
        }]
      });