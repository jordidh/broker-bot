extends layout

block variables
    - var msgAlert = m_alert
    - var msgSuccess = m_success
    - var msgInfo = m_info
    - var msgWarning = m_warning

block extraScripts
  script(src='https://code.highcharts.com/stock/highstock.js')
  script(src='https://code.highcharts.com/stock/modules/data.js')
  script(src='https://code.highcharts.com/stock/modules/exporting.js')
  script(src="https://code.highcharts.com/stock/indicators/indicators.js")
  script(src="https://code.highcharts.com/stock/indicators/ema.js")
  script(src="https://code.highcharts.com/stock/indicators/dema.js")

block extraStyles
  link(rel='stylesheet' href='stylesheets/analysis.css')

block content
  h1 #{name} V #{version}

  p Page to get prices from exchanges

  p Get prices from exchange (kraken returns the last 720 data points)
    .container
      fieldset
        form(action='prices', method='get')
          | ðŸ§ª Test with prices &nbsp;
          select(name= 'exchange')
            if exchanges
              each exchange, i in exchanges
                option(value=exchange.url) #{exchange.name}
          select(name= 'pair')
            if pairs
              each pair, i in pairs
                option(value=pair) #{pair}
          select(name= 'interval')
            if intervals
              each interval, i in intervals
                option(value=interval) #{interval}
          input.ghost-button(name='btn', type='submit', value='GetPrices')

  p Save prices to test
    .container
      fieldset
        form(action='prices', method='post')
          | Data range to save: &nbsp;
          input#start-time(type='datetime-local' name='start-time' value='2018-06-12T19:30' min='2018-06-07T00:00' max='2018-06-14T00:00')
          input#end-time(type='datetime-local' name='end-time' value='2019-06-12T19:30' min='2019-06-07T00:00' max='2019-06-14T00:00')
          input.ghost-button(name='btn', type='submit', value='SavePrices')

  figure.highcharts-figure
  #container(style='height: 620px; min-width: 310px')
  p.highcharts-description

  script(type='text/javascript').
    // create the chart
    Highcharts.stockChart('container', {

      rangeSelector: {
        selected: 2
      },

      title: {
        text: "#{data.title}"
      },

      subtitle: {
          text: '#{data.subtitle}'
      },

      legend: {
        enabled: true
      },

      plotOptions: {
        series: {
            showInLegend: true
        },
        candlestick: {
            // shared options for all candlestick series
        }
      },

      series: [{
        type: 'candlestick',
        id: 'aapl',
        name: '#{data.yAxisTitle}',
        data: !{data.series},
      }]
    });